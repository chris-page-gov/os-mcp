swagger: '2.0'
info:
  title: OS MCP Server
  description: OS DataHub API MCP Server - Ordnance Survey geospatial data access through Model Context Protocol for streamable MCP support in Copilot Studio
  version: 1.0.0
  contact:
    name: OS MCP Server
    url: https://github.com/chris-page-gov/os-mcp
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
host: localhost:8000
basePath: /
schemes:
  - http
  - https
consumes:
  - application/json
produces:
  - application/json
paths:
  /mcp:
    post:
      summary: OS DataHub Geospatial Data MCP Server
      description: |
        Access UK Ordnance Survey geospatial data through Model Context Protocol.
        Provides tools for searching streets, buildings, addresses, land use data and more
        across the UK using bounding boxes, postcodes, and advanced CQL filtering.
        
        Available tools include:
        - hello_world: Test connectivity
        - check_api_key: Verify OS API key status
        - get_workflow_context: Get available collections and filtering guidance
        - list_collections: List all available data collections
        - search_features: Search for geospatial features with filtering
        - get_feature: Get specific feature details by ID
        - get_collection_info: Get detailed collection information
        - get_collection_queryables: Get available filter fields for a collection
      x-ms-agentic-protocol: mcp-streamable-1.0
      operationId: InvokeMCP
      parameters:
        - name: Authorization
          in: header
          description: Bearer token for authentication
          required: true
          type: string
          default: "Bearer dev-token"
        - name: body
          in: body
          description: MCP request payload
          required: true
          schema:
            type: object
            properties:
              method:
                type: string
                description: MCP method to invoke
                enum:
                  - initialize
                  - tools/list
                  - tools/call
                example: "tools/call"
              params:
                type: object
                description: Parameters for the MCP method
                properties:
                  name:
                    type: string
                    description: Tool name to call
                    example: "search_features"
                  arguments:
                    type: object
                    description: Tool arguments
                    properties:
                      collection_id:
                        type: string
                        description: Data collection to search
                        example: "trn-ntwk-street-1"
                      bbox:
                        type: string
                        description: Bounding box as min_lon,min_lat,max_lon,max_lat
                        example: "-1.16,52.95,-1.15,52.96"
                      filter:
                        type: string
                        description: CQL filter expression
                        example: "roadclassification = 'A Road'"
                      limit:
                        type: integer
                        description: Maximum number of results
                        example: 10
      responses:
        '200':
          description: Success
          schema:
            type: object
            properties:
              jsonrpc:
                type: string
                example: "2.0"
              id:
                type: string
                description: Request ID
              result:
                type: object
                description: MCP response data
                properties:
                  content:
                    type: array
                    items:
                      type: object
                      properties:
                        type:
                          type: string
                          example: "text"
                        text:
                          type: string
                          description: Response content
        '400':
          description: Bad Request
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: integer
                  message:
                    type: string
        '401':
          description: Unauthorized
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: integer
                    example: 401
                  message:
                    type: string
                    example: "Invalid or missing authentication"
        '429':
          description: Rate Limit Exceeded
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: integer
                    example: 429
                  message:
                    type: string
                    example: "Rate limit exceeded"
        '500':
          description: Internal Server Error
          schema:
            type: object
            properties:
              error:
                type: object
                properties:
                  code:
                    type: integer
                    example: 500
                  message:
                    type: string
                    example: "Internal server error"
  /.well-known/mcp-auth:
    get:
      summary: MCP Authentication Discovery
      description: Returns available authentication methods for the MCP server
      operationId: GetAuthMethods
      responses:
        '200':
          description: Authentication methods
          schema:
            type: object
            properties:
              authMethods:
                type: array
                items:
                  type: object
                  properties:
                    type:
                      type: string
                      example: "http"
                    scheme:
                      type: string
                      example: "bearer"
definitions:
  MCPRequest:
    type: object
    required:
      - method
    properties:
      jsonrpc:
        type: string
        example: "2.0"
      id:
        type: string
        description: Request identifier
      method:
        type: string
        description: MCP method name
      params:
        type: object
        description: Method parameters
  MCPResponse:
    type: object
    properties:
      jsonrpc:
        type: string
        example: "2.0"
      id:
        type: string
        description: Request identifier
      result:
        type: object
        description: Method result
      error:
        type: object
        description: Error information
        properties:
          code:
            type: integer
          message:
            type: string
  GeoJSONFeature:
    type: object
    description: GeoJSON Feature object returned by geospatial searches
    properties:
      type:
        type: string
        example: "Feature"
      id:
        type: string
        description: Feature identifier
      geometry:
        type: object
        description: GeoJSON geometry
        properties:
          type:
            type: string
            example: "Point"
          coordinates:
            type: array
            items:
              type: number
            example: [-1.1543, 52.9548]
      properties:
        type: object
        description: Feature properties/attributes
        additionalProperties: true
securityDefinitions:
  bearerAuth:
    type: apiKey
    name: Authorization
    in: header
    description: Bearer token authentication (use "Bearer dev-token" for development)
security:
  - bearerAuth: []
tags:
  - name: MCP
    description: Model Context Protocol operations
  - name: Authentication
    description: Authentication and discovery
externalDocs:
  description: OS MCP Server Documentation
  url: https://github.com/chris-page-gov/os-mcp
